#!/usr/bin/env bash

VER=${1}
KERNEL=${2}
#echo "ARGS: $*"
#echo "VER: $VER"
#echo "KERNEL: $KERNEL"

# Option 1, wrap uImage manually
# uImage compression options: none, bzip2, gzip, lz4, lzma, lzo, zstd
# - uboot config may only support a subset, gzip is most common.
FCOMP="$(file -i "$KERNEL")"
if ! echo "$FCOMP" | grep -q executable; then
	echo "Error: this script assumes $KERNEL is already decompressed"
	exit 1
fi

# extract binary from vmlinux elf
IN=$(mktemp)
objcopy -O binary "$KERNEL" "$IN"

# default: compress with gzip
gzip --best "$IN"
IN="${IN}.gz"
COMP="gzip"

# wrap binary (compressed) with uImage header
ofile="${KERNEL/vmlinux/uImage}"
membase=$(objdump -p "$KERNEL" | grep -m 1 LOAD | awk '{print $7}')
rm -f "$ofile"
mkimage -A powerpc -O linux -T kernel -C "$COMP" -a "$membase" -e "$membase" -n "Gentoo Linux $VER" -d "$IN" "$ofile"
rm -f "$IN"


# Option 2, leverge kernel's uboot wrapper
#export srcdir="/usr/src/${VER}"
# mimiking arch/powerpc/boot/.uImage.cmd generated during make uImage
#"${srcdir}/arch/powerpc/boot/wrapper" -Z gz -c -o "${KERNEL/vmlinux/uImage}" -p uboot "${IN}"

